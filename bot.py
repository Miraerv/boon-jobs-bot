import os
from dotenv import load_dotenv
from telegram import ReplyKeyboardMarkup, Update, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
MANAGER_ID = int(os.getenv("MANAGER_ID"))

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
(
    PHONE,
    NAME,
    BRANCH,
    SCHEDULE,
    EXPERIENCE,
    SELFEMPLOYED,
    SALARY_EXPECT,
    VACANCY_INFO,
    FINAL,
) = range(9)

# --- –®–∞–≥ 1 ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    contact_button = KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)
    keyboard = ReplyKeyboardMarkup([[contact_button]], one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
        "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é —Å–±–æ—Ä—â–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –≤ Boon Express üöÄ\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —É—Ç–æ—á–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=keyboard
    )
    return PHONE

# --- –®–∞–≥ 2 ---
async def phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    contact = update.message.contact
    context.user_data["phone"] = contact.phone_number
    
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ, –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ –ø–æ–ª—É—á–µ–Ω. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø–æ–ª–Ω—ã–µ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è.",
        reply_markup=ReplyKeyboardRemove()
    )
    return NAME

# --- –®–∞–≥ 3 ---
async def name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    branches = [
        ["203 –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω"],
        ["–î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ"],
        ["–ü–æ—è—Ä–∫–æ–≤–∞"],
        ["–ó–∞–ª–æ–≥"],
        ["–ü—Ä–æ–º–µ—Ç–µ–π"],
        ["–†—ã–¥–∑–∏–Ω—Å–∫–æ–≥–æ"],
        ["–†–æ—Å—Ç–µ–ª–µ–∫–æ–º"],
        ["–ø–ª. –î—Ä—É–∂–±—ã"],
        ["–ê–≤–∏–∞–ø–æ—Ä—Ç"],
    ]
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏ –±–ª–∏–∂–∞–π—à–∏–π –∏–ª–∏ –∂–µ–ª–∞–µ–º—ã–π —Ñ–∏–ª–∏–∞–ª:",
        reply_markup=ReplyKeyboardMarkup(branches, one_time_keyboard=True, resize_keyboard=True)
    )
    return BRANCH

# --- –®–∞–≥ 4 ---
async def branch(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["branch"] = update.message.text
    schedules = [
        ["08:00‚Äì16:00"], 
        ["16:00‚Äì23:00"], 
        ["08:00‚Äì23:00"],
    ]
    await update.message.reply_text(
        "–ö–∞–∫–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –≤–∞–º —É–¥–æ–±–µ–Ω?",
        reply_markup=ReplyKeyboardMarkup(schedules, one_time_keyboard=True, resize_keyboard=True)
    )
    return SCHEDULE

# --- –®–∞–≥ 5 ---
async def schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["schedule"] = update.message.text
    await update.message.reply_text(
        "–ï—Å—Ç—å –ª–∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ —Å–±–æ—Ä–∫–µ –∑–∞–∫–∞–∑–æ–≤, –Ω–∞ —Å–∫–ª–∞–¥–µ –∏–ª–∏ –≤ –¥–æ—Å—Ç–∞–≤–∫–µ?",
        reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
    )
    return EXPERIENCE

# --- –®–∞–≥ 6 ---
async def experience(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["experience"] = update.message.text
    await update.message.reply_text(
        "–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –æ—Ñ–æ—Ä–º–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ–≥–æ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´–ú–æ–π –Ω–∞–ª–æ–≥¬ª?",
        reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
    )
    return SELFEMPLOYED

# --- –®–∞–≥ 7 ---
async def selfemployed(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["selfemployed"] = update.message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if update.message.text.lower() == "–Ω–µ—Ç":
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∞–Ω–∫–µ—Ç—ã
        keyboard = [[InlineKeyboardButton("üîÑ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ", callback_data="restart_form")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —É –Ω–∞—Å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ–≥–æ. "
            "–°—Ç–∞—Ç—É—Å —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ–≥–æ –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´–ú–æ–π –Ω–∞–ª–æ–≥¬ª.",
            reply_markup=reply_markup
        )
        return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
        
    elif update.message.text.lower() == "–¥–∞":
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        await update.message.reply_text(
            "–ö–∞–∫–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –≤—ã –æ–∂–∏–¥–∞–µ—Ç–µ –æ—Ç —Ä–∞–±–æ—Ç—ã?",
            reply_markup=ReplyKeyboardRemove()
        )
        return SALARY_EXPECT
        
    else:
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ "–î–∞" –∏–ª–∏ "–ù–µ—Ç", –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: ¬´–î–∞¬ª –∏–ª–∏ ¬´–ù–µ—Ç¬ª",
            reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
        )
        return SELFEMPLOYED

# --- –®–∞–≥ 8 ---
async def salary_expect(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["salary_expect"] = update.message.text
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã! –í—ã—Å—ã–ª–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n"
        "üì¶ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–±–æ—Ä—â–∏–∫ –∑–∞–∫–∞–∑–æ–≤?\n"
        "‚Ä¢ –°–±–æ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤\n"
        "‚Ä¢ –í—ã–∫–ª–∞–¥–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤\n"
        "‚Ä¢ –§–∞—Å–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤\n"
        "‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ä–æ–∫–æ–≤ –≥–æ–¥–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –û–±—â–µ–Ω–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–æ–º\n"
        "‚Ä¢ –ß–∏—Å—Ç–æ—Ç–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ\n"
        "‚Ä¢ –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è\n"
        "‚Ä¢ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–æ –°–ª—É–∂–±–æ–π –∑–∞–±–æ—Ç—ã\n"
        "‚Ä¢ –ü—Ä–∏–µ–º –æ–ø–ª–∞—Ç—ã\n\n"
        "‚ö° –ß—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —ç—Ç–æ–π —Ä–∞–±–æ—Ç—ã?\n"
        "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Å–∫–æ—Ä–æ—Å—Ç—å, –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å, —É–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ, —É–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å "
        "–≤ —É—Å–ª–æ–≤–∏—è—Ö –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏, –∑–Ω–∞–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤ —Å–±–æ—Ä–∫–∏ –∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å–∫–ª–∞–¥–µ.\n\n"
        "üìÖ –ì—Ä–∞—Ñ–∏–∫: –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –∏ —Å–æ–≥–ª–∞—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è —Å —Å—É–ø–µ—Ä–≤–∞–π–∑–µ—Ä–æ–º.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–º–µ–Ω—ã: 08:00‚Äì16:00, 16:00‚Äì23:00, 08:00‚Äì23:00.\n"
        "–ù–µ–≤—ã—Ö–æ–¥ –Ω–∞ —Å–º–µ–Ω—É –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è ‚Äî —É–¥–µ—Ä–∂–∞–Ω–∏–µ –∏–∑ –∑–∞—Ä–ø–ª–∞—Ç—ã.\n\n"
        "üí∞ –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ:\n"
        "‚Ä¢ –ß–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: 220 ‚ÇΩ\n"
        "‚Ä¢ –ó–∞ –∫–∞–∂–¥—ã–π —Å–æ–±—Ä–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑: 10 ‚ÇΩ\n\n"
        "üìù –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞: 10‚Äì20 —á–∞—Å–æ–≤, 100 ‚ÇΩ/—á–∞—Å\n\n"
        "üí≥ –í—ã–ø–ª–∞—Ç—ã: –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫‚Äì—Å—Ä–µ–¥–∞) –Ω–∞ –∫–∞—Ä—Ç—É –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ–≥–æ "
        "(–Ω–∞–ª–æ–≥ 6% –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ)\n\n"
        "üìà –ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç: –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–æ–º –∏–ª–∏ —É–ø—Ä–∞–≤–ª—è—é—â–∏–º –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç–µ\n\n"
        "üìÑ –î–æ–≥–æ–≤–æ—Ä: –ó–∞–∫–ª—é—á–∞–µ—Ç—Å—è –¥–æ–≥–æ–≤–æ—Ä –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥\n\n"
        "üéì –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–≤–º–µ—â–∞—Ç—å —Å —É—á–µ–±–æ–π, –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –≥–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫. "
        "–ß–µ–º –±–æ–ª—å—à–µ —á–∞—Å–æ–≤, —Ç–µ–º –≤—ã—à–µ –¥–æ—Ö–æ–¥.\n\n"
        "–¢—ã –≥–æ—Ç–æ–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ?\n"
        "–ï—Å–ª–∏ –≤—Å—ë —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç ‚Äî –ø–æ—Å—Ç–∞–≤—å + üòä"
    )
    return VACANCY_INFO

# --- –®–∞–≥ 9 ---
async def vacancy_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text.strip() == "+":
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É! –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—É—á–∏—Ç —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –∏ –Ω–∞–∑–Ω–∞—á–∏—Ç –≤—Ä–µ–º—è –æ–Ω–ª–∞–π–Ω-—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è "
            "–≤ —Ç–µ—á–µ–Ω–∏–µ 1‚Äì2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n\n"
            "–û–Ω–ª–∞–π–Ω-—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ—Ç –ø–æ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫—É –∏ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 7 –º–∏–Ω—É—Ç.\n"
            "–ü–æ—Å–ª–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–∏—Ç—å –¥–µ–Ω—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏, "
            "—á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞ –ø–æ–ª–Ω—ã–µ —Å–º–µ–Ω—ã.\n\n"
            "–î–æ —Å–∫–æ—Ä–æ–≥–æ! üíú"
        )
        # 2. –°–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        user_data = context.user_data
        text_to_manager = (
            f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
            f"–ò–º—è: {user_data.get('name')}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_data.get('phone')}\n"
            f"–§–∏–ª–∏–∞–ª: {user_data.get('branch')}\n"
            f"–ì—Ä–∞—Ñ–∏–∫: {user_data.get('schedule')}\n"
            f"–û–ø—ã—Ç: {user_data.get('experience')}\n"
            f"–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π: {user_data.get('selfemployed')}\n"
            f"–î–æ—Ö–æ–¥ –æ–∂–∏–¥–∞–Ω–∏—è: {user_data.get('salary_expect')}"
        )
        await context.bot.send_message(chat_id=MANAGER_ID, text=text_to_manager)

        return ConversationHandler.END
    else:
        await update.message.reply_text("–ü–æ—Å—Ç–∞–≤—å +, –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–µ–Ω.")
        return VACANCY_INFO

# --- –û—Ç–º–µ–Ω–∞ ---
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–Ω.")
    return ConversationHandler.END

# --- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ ---
async def restart_form_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    context.user_data.clear()
    
    await query.edit_message_text("–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –∑–∞–Ω–æ–≤–æ...")
    
    await query.message.reply_text(
        "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=ReplyKeyboardMarkup(
            [["üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º"]], 
            one_time_keyboard=True, 
            resize_keyboard=True,
            request_contact=True
        )
    )
    
    return PHONE

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            PHONE: [
                MessageHandler(filters.CONTACT, phone),
                MessageHandler(filters.TEXT & ~filters.COMMAND, phone),
            ],
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, name)],
            BRANCH: [MessageHandler(filters.TEXT & ~filters.COMMAND, branch)],
            SCHEDULE: [MessageHandler(filters.TEXT & ~filters.COMMAND, schedule)],
            EXPERIENCE: [MessageHandler(filters.TEXT & ~filters.COMMAND, experience)],
            SELFEMPLOYED: [MessageHandler(filters.TEXT & ~filters.COMMAND, selfemployed)],
            SALARY_EXPECT: [MessageHandler(filters.TEXT & ~filters.COMMAND, salary_expect)],
            VACANCY_INFO: [MessageHandler(filters.TEXT & ~filters.COMMAND, vacancy_info)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    restart_callback_handler = CallbackQueryHandler(restart_form_callback, pattern="restart_form")


    app.add_handler(conv_handler)
    app.add_handler(restart_callback_handler)

    app.run_polling()
